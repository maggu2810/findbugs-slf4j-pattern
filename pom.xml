<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <groupId>tmp</groupId>
  <artifactId>findbugs-slf4j-test</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>

    <slf4j.version>1.7.21</slf4j.version>

    <maven.build.resources.version>1.7</maven.build.resources.version>
    <checkerframework.version>2.1.5</checkerframework.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Checker Framework -->
      <dependency>
        <!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>${checkerframework.version}</version>
      </dependency>

      <!-- Findbugs -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>3.0.1u2</version>
      </dependency>

      <!-- OSGi -->
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.osgi</groupId>
        <artifactId>osgi.core</artifactId>
        <version>6.0.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.osgi</groupId>
        <artifactId>osgi.cmpn</artifactId>
        <version>6.0.0</version>
        <scope>provided</scope>
      </dependency>

      <!-- Simple Logging Facade for Java (SLF4J) -->
      <dependency>
        <!--MIT License -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>3.0.3</version>
          <configuration>
            <plugins>
              <plugin>
                <!-- https://github.com/KengoTODA/findbugs-slf4j -->
                <groupId>jp.skypencil.findbugs.slf4j</groupId>
                <artifactId>bug-pattern</artifactId>
                <version>1.2.4</version>
              </plugin>
            </plugins>
            <findbugsXmlOutput>true</findbugsXmlOutput>
            <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
            <xmlOutput>true</xmlOutput>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <maxRank>20</maxRank>
            <excludeFilterFile>findbugs/findbugs_exclude.xml</excludeFilterFile>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>de.maggu2810.maven.build</groupId>
              <artifactId>resources</artifactId>
              <version>${maven.build.resources.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>checkerframework-check</id>
      <activation>
        <property>
          <name>checkerframework</name>
          <value>check</value>
        </property>
      </activation>

      <properties>
        <!-- These properties will be set by the Maven Dependency plugin -->
        <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
        <!-- Uncomment to use the type annotations compiler. -->
        <typeAnnotationsJavac>${org.checkerframework:compiler:jar}</typeAnnotationsJavac>
      </properties>

      <dependencyManagement>
        <dependencies>
          <!-- Checker Framework -->
          <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>${checkerframework.version}</version>
          </dependency>
          <!-- The type annotations compiler - uncomment if desired -->
          <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>compiler</artifactId>
            <version>${checkerframework.version}</version>
          </dependency>
          <!-- The annotated JDK to use -->
          <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>jdk8</artifactId>
            <version>${checkerframework.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <!-- Checker Framework -->
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker</artifactId>
          <scope>provided</scope>
        </dependency>
        <!-- The annotated JDK to use -->
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>jdk8</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <!-- This plugin will set the properties values using dependency information -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>properties</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <fork>true</fork>
              <annotationProcessors>
                <!-- Add all the checkers you want to enable here -->
                <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
              </annotationProcessors>
              <compilerArgs>
                <!-- directory containing annotated library stubs -->
                <arg>-Astubs=../../tools/checkerframework/stubs</arg>
                <arg>-AstubWarnIfNotFound</arg>
                <arg>-AstubWarnIfOverwritesBytecode</arg>
                <arg>-AstubDebug</arg>

                <!-- -Awarns Treat checker errors as warnings. -->
                <!-- If you use this, you may wish to also supply -Xmaxwarns 10000, because by default javac prints at most 100 warnings. -->
                <!-- <arg>-Awarns</arg> -->
                <!-- <arg>-Xmaxwarns</arg> -->
                <!-- <arg>10000</arg> -->
                <arg>${checkerframework.compiler.arg1}</arg>

                <!-- -AshowSuppressWarningKeys With each warning, show all possible keys to suppress that warning. -->
                <arg>-AshowSuppressWarningKeys</arg>

                <!-- location of the annotated JDK, which comes from a Maven dependency -->
                <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                <!-- Uncomment the following line to use the type annotations compiler. -->
                <!-- <arg>-J-Xbootclasspath/p:${typeAnnotationsJavac}</arg> -->
              </compilerArgs>
            </configuration>
          </plugin>

          <!-- <plugin> -->
          <!-- <groupId>org.apache.maven.plugins</groupId> -->
          <!-- <artifactId>maven-antrun-plugin</artifactId> -->
          <!-- <executions> -->
          <!-- <execution> -->
          <!-- <phase>validate</phase> -->
          <!-- <goals> -->
          <!-- <goal>run</goal> -->
          <!-- </goals> -->
          <!-- <configuration> -->
          <!-- <tasks> -->
          <!-- <echo>Displaying value of 'annotatedJdk' property</echo> -->
          <!-- <echo>[annotatedJdk] ${annotatedJdk}</echo> -->
          <!-- </tasks> -->
          <!-- </configuration> -->
          <!-- </execution> -->
          <!-- </executions> -->
          <!-- </plugin> -->
        </plugins>
      </build>
    </profile>

    <profile>
      <id>findbugs</id>
      <activation>
        <property>
          <name>findbugs</name>
        </property>
      </activation>
      <build>
        <defaultGoal>clean install findbugs:check</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>annotated-jdk</id>
      <activation>
        <property>
          <name>annotated-jdk</name>
        </property>
      </activation>

      <properties>
        <!-- These properties will be set by the Maven Dependency plugin -->
        <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
      </properties>

      <dependencyManagement>
        <dependencies>
          <!-- The annotated JDK to use -->
          <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>jdk8</artifactId>
            <version>${checkerframework.version}</version>
          </dependency>
        </dependencies>
      </dependencyManagement>

      <dependencies>
        <!-- The annotated JDK to use -->
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>jdk8</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <!-- <fork>true</fork> -->
                <compilerArgs>
                  <!-- location of the annotated JDK, which comes from a Maven dependency -->
                  <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                </compilerArgs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <!-- This plugin will set the properties values using dependency information -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>properties</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <pluginRepositories>
    <!-- Maven Central -->
    <!-- Use this first, so we prefer Central all the time -->
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <url>https://repo1.maven.org/maven2</url>
    </pluginRepository>

    <!-- For the resources used by e.g. FindBugs -->
    <pluginRepository>
      <id>bintray-maggu2810-maven</id>
      <url>https://dl.bintray.com/maggu2810/maven/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <repositories>
    <!-- Maven Central -->
    <!-- Use this first, so we prefer Central all the time -->
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <url>https://repo1.maven.org/maven2</url>
    </repository>

    <!-- For the resources used by e.g. FindBugs -->
    <repository>
      <id>bintray-maggu2810-maven</id>
      <url>https://dl.bintray.com/maggu2810/maven/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <modules>
    <module>params</module>
  </modules>

</project>
